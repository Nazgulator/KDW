@model KDW.Models.StocksSelect

@{
    ViewBag.Title = "Edit";
}

<h2>Редактировать</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   <div class="container">
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.StockId, "StockId", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-6">
                @Html.DropDownList("StockId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.StockNameZH, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                @Html.EditorFor(model => model.StockNameZH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockNameZH, "", new { @class = "text-danger" })
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.StockNameRU, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                @Html.EditorFor(model => model.StockNameRU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockNameRU, "", new { @class = "text-danger" })
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladPriemki, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladPriemki, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladPriemki, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladBraka, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladBraka, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladBraka, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladUchastka, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladUchastka, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladUchastka, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladBrakaUchastka, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladBrakaUchastka, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladBrakaUchastka, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladVozvrataNZP, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladVozvrataNZP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladVozvrataNZP, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladBuferZone, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladBuferZone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladBuferZone, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       

        <div class="row col-md-6 col-md-offset-3">
            <div class="col-md-6">
            @Html.LabelFor(model => model.SkladPeremesheniyaBuferZone, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkladPeremesheniyaBuferZone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkladPeremesheniyaBuferZone, "", new { @class = "text-danger" })
                </div>
            </div>
         </div>
       


                <div class=" col-md-6  ">
                    @Html.ActionLink("Назад", "Index", null, new { @class = "btn btn-outline-success btn-block" })
                </div>
                <div class=" col-md-6  ">
                    <input type="submit" value="Изменить" class="btn btn-success btn-block" />
                </div>

    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
